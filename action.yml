name: Setup-Test-Appli

description: 'Setup Test Appli'

branding:
  icon: 'check-circle'
  color: 'green'

inputs:
  version:
    description: 'The version to use.'
    default: 'v0.0.42'
    required: true
  action:
    description: 'The action to run.'
    default: 'create'
    required: true
  oci-service:
    description: 'The Oracle Cloud Infrastructure service to test.'
    default: 'autonomous-transaction-processing-serverless'
    required: true
  user:
    description: 'The database username to be used for database creation. If multiple users are required then enter a comma-separated list of usernames (no space).'
    required: false
  password:
    description: 'The database user password to be used for database creation. If multiple users are required then they will all have the very same password.'
    required: false
  prefix_list:
    description: 'A comma separated list of file(s) or folder(s) that if changed should not trigger any test (example: folder containing documentation).'
    required: false

outputs:
  database_host:
    description: 'The database hostname.'
    value: ${{ steps.run.outputs.host }}
  database_service:
    description: 'The database service name.'
    value: ${{ steps.run.outputs.database_service }}
  database_version:
    description: 'The database version.'
    value: ${{ steps.run.outputs.version }}
  connection_string_suffix:
    description: 'The database connection string suffix (after @).'
    value: ${{ steps.run.outputs.connection_string }}
  skip_tests:
    description: 'Should skip tests?'
    value: ${{ steps.run.outputs.skip_tests }}

runs:
  using: 'composite'
  steps:
    - name: 'Install binaries'
      shell: bash
      env:
        VERSION: ${{ inputs.version }}
      run: ${GITHUB_ACTION_PATH}/setup-test.sh

    - name: 'Run'
      id: run
      if: inputs. == 'no'
      shell: bash -leo pipefail {0}
      env:
        RUNID: ${{ github.run_number }}
      run: |
        ${GITHUB_ACTION_PATH}/setup-testpilot --${{ inputs.service }} \
        --user "${{ inputs.user }}" --password "${{ inputs.password }}" --type "${{ inputs.type }}" \
        --owner "${{ github.repository_owner }}" --repository "${{ github.event.repository.name }}" --sha "${{ github.sha }}" \
        --prefix-list "${{ inputs.prefix_list }}" >> $GITHUB_OUTPUT
