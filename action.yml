name: Setup-Test-Appli

description: 'Setup Test Appli'

branding:
  icon: 'check-circle'
  color: 'green'

inputs:
  version:
    description: 'The version to use.'
    default: 'v0.0.35'
    required: true
  type:
    description: 'The technology to test.'
    default: 'atps'
    required: true
  user:
    description: 'The database user name(s) (comma-separated list if several databases to create).'
    required: false
  password:
    description: 'The database user password.'
    required: false
  service:
    description: 'The service to use.'
    default: 'create-database'
    required: true
  prefix_list:
    description: 'A comma separated list of file(s) or folder(s) that if changed should not trigger any non-regression test.'
    required: false

outputs:
  host:
    description: 'The database hostname'
    value: ${{ steps.run.outputs.host }}
  service:
    description: 'The database service'
    value: ${{ steps.run.outputs.service }}
  version:
    description: 'The database version'
    value: ${{ steps.run.outputs.version }}
  connection_string:
    description: 'The database connection string'
    value: ${{ steps.run.outputs.connection_string }}
  skip_tests:
    description: 'Should skip tests?'
    value: ${{ steps.run.outputs.skip_tests }}

runs:
  using: 'composite'
  steps:
    - name: 'Install binaries'
      shell: bash
      env:
        VERSION: ${{ inputs.version }}
      run: ${GITHUB_ACTION_PATH}/setup-test.sh

    - name: 'Run'
      id: run
      shell: bash
      env:
        RUNID: ${{ github.run_number }}
      run: |
        ${GITHUB_ACTION_PATH}/setup-testpilot --${{ inputs.service }} \
        --user "${{ inputs.user }}" --password "${{ inputs.password }}" --type "${{ inputs.type }}" \
        --owner "${{ github.repository_owner }}" --repository "${{ github.event.repository.name }}" --sha "${{ github.sha }}" \
        --prefix-list "${{ inputs.prefix_list }}" >> $GITHUB_OUTPUT
